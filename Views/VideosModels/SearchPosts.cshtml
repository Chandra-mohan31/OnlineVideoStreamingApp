@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model IEnumerable<OnlineVideoStreamingApp.Models.VideosModel>



@{
    ViewData["Title"] = "Index";
    var users = (List<OnlineVideoStreamingApp.Areas.Identity.Data.OnlineVideoStreamingAppUser>)ViewData["users"];
    var subscribedUsersId = (List<string>)ViewData["subscribedUsersId"];
}


@if (ViewData["users"] != null)
{

    <div class="users-container">
        @foreach (var user in users)
        {
            <div class="user-card">
                <img src="@user.ProfileImageUrl" alt="" class="rounded-avatar1" />
                <div class="user-details">
                    <p class="username">@user.UserName</p>
                    @if (subscribedUsersId.Contains(user.Id))
                    {
                        <form asp-action="UnSubscribeUser">
                            <input type="text" value="@user.Id" name="subscribeeId" hidden />
                            <button type="submit" class="unsubscribe-btn">UnSubscribe</button>

                        </form>
                    }
                    else
                    {
                        if (!(user.Id == ViewData["currUserId"].ToString()))
                        {
                            <form asp-action="SubscribeUser">
                                <input type="text" value="@user.Id" name="subscribeeId" hidden />
                                <button type="submit" class="subscribe-btn">Subscribe</button>

                            </form>
                        }
                        else
                        {
                            <button class="subscribe-btn">You</button>

                        }
                    }
                </div>
            </div>

        }
    </div>


}

<h5>Subscribed Videos</h5>

<p>

    <a asp-action="Create">
        <button class="btn btn-primary text-white">Upload a new video</button>
    </a>



</p>
<form method="post" asp-action="SearchPosts">
    <div class="d-flex justify-content-start search_container">
        <div class="d-flex align-items-center mx-2">
            <label class="col-form-label me-2">Search:</label>
            <div class="">
                <select id="filter" name="filter">
                    <option value="VideoCategory">VideoCategory</option>
                    <option value="VideoTitle">VideoTitle</option>
                    <option value="UserName">UserName</option>

                </select>
            </div>
        </div>
        <div class="mx-2 d-flex align-items-center ">
            <label class="col-form-label me-2">Value</label>
            <div class="">
                <input type="text" class="form-control" placeholder="enter the search term" name="Val" value="" />
            </div>
        </div>
        <div>
            <button class="btn btn-primary" type="submit">Search</button>
            <a class="btn btn_primary text-decoration-none border-1 border-secondary" href="VideosModels">Remove filter</a>
        </div>
    </div>
</form>

@if (Model.Any())
{
    <div class="d-flex flex-wrap">
        @foreach (var item in Model)
        {
            <div class="card mb-4 mr-4 m-4" style="width: 300px;">
                <img class="card-img-top" src="@item.ThumbNailImage" alt="Card image cap" style="height: 150px; object-fit: cover;">
                <div class="card-body">
                    <h5 class="card-title">@item.VideoTitle</h5>
                    <p class="card-text">@item.VideoDescription</p>
                </div>
                <ul class="list-group list-group-flush">
                    <div class="d-flex justify-content-center">
                        <img src="@item.PostedByUser.ProfileImageUrl" alt="Profile Image" class="rounded-avatar" />

                        <li class="list-group-item border-0"><strong>Posted By:</strong> @item.PostedByUser.UserName</li>
                    </div>

                    <li class="list-group-item"><strong>Category:</strong> @item.VideoCategory</li>
                    @if (item.VideoPostedOn != null)
                    {
                        <li class="list-group-item"><strong>Posted On :</strong> @item.VideoPostedOn</li>
                        <li class="list-group-item">
                            @{
                                TimeSpan timeSincePosted = (DateTime)DateTime.Now - (DateTime)item.VideoPostedOn;
                                if (timeSincePosted.TotalDays >= 1)
                                {
                                    @(
                                                        $"{Math.Floor(timeSincePosted.TotalDays)} days ago"
                                                        )
                                }
                                else
                                {
                                    @(
                                                        $"{timeSincePosted.Hours} hours, {timeSincePosted.Minutes} minutes ago"
                                                        )
                                }
                            }
                        </li>
                    }
                </ul>
                <div class="card-footer">
                    @*<a href="@item.VideoUrl" class="btn btn-primary">Watch Video</a>*@
                    @*<a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-secondary">Edit</a>*@
                    <a asp-action="PlayVideo" asp-route-id="@item.Id" class="btn btn-primary">Play Video</a>
                    @*<a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>*@
                </div>
            </div>
        }
    </div>
}
else
{
    <div>Sorry,Results not found!</div>
}
<style>
    .search_container {
        border: 0.5px solid black;
        border-radius: 10px;
        padding: 5px;
    }

    .users-container {
        display: flex;
        flex-wrap: nowrap;
        overflow-x: auto;
        padding: 10px;
    }

    .user-card {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-right: 10px;
        width: 200px;
        background-color: #f2f2f2;
        border-radius: 10px;
        padding: 10px;
    }

    .rounded-avatar1 {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        object-fit: cover;
        margin-bottom: 10px;
    }

    .username {
        font-size: 16px;
        font-weight: bold;
        margin-bottom: 5px;
    }

    .subscribe-btn {
        background-color: #4CAF50;
        color: white;
        padding: 5px 10px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .unsubscribe-btn {
        background-color: red;
        color: white;
        padding: 5px 10px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

</style>


